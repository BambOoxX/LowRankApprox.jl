{"name":"LowRankApprox.jl","tagline":"Fast low-rank matrix approximation in Julia","body":"# LowRankApprox\r\n\r\nThis Julia package implements fast low-rank matrix approximation algorithms for BLAS/LAPACK-compatible matrices. The focus is on performance and feature-completeness; we include both deterministic early-termination variants of standard codes as well as those based on some of the latest technology in adaptive randomized matrix sketching. All user-level functions accept a number of options specifying, e.g., the rank, estimated absolute precision, and estimated relative precision of approximation.\r\n\r\n## Usage\r\n\r\nTo illustrate the usage of this package, consider the computation of a partial QR decomposition of a matrix `A`:\r\n```\r\nF = LowRankApprox.pqrfact(A)\r\n```\r\nor, alternatively,\r\n```\r\nQ, R, p = LowRankApprox.pqr(A)\r\n```\r\nThis computes a factorization using the default options: an approximation to roughly `1e-15` relative precision accelerated by an adaptive random Gaussian sketch. To request only `1e-12` relative precision, use\r\n```\r\nF = LowRankApprox.pqrfact(A, 1e-12)\r\n```\r\nWe can also directly control the rank of the approximation instead by typing, e.g.,\r\n```\r\nF = LowRankApprox.pqrfact(A, 20)\r\n```\r\nwhich computes an approximation of rank at most `20`.\r\n\r\nFurther user options can be exposed through the interface\r\n```\r\nF = LowRankApprox.pqrfact(A, opts)\r\n```\r\nFor example, to compute an approximation of rank at most `20` or to an estimated relative precision of at most `1e-12`, use\r\n```\r\nopts = LowRankApprox.LRAOptions(rank=20, rtol=1e-12)\r\n```\r\nIn other words, this sets two termination criteria, one at reaching rank `20` and another at achieving `1e-12` relative precision, with the algorithm terminating when either one of these is reached. The most general accuracy setting includes also the estimated absolute precision, e.g.,\r\n```\r\nopts = LowRankApprox.LRAOptions(atol=1e-9, rank=20, rtol=1e-12)\r\n```\r\n\r\nOther matrix sketching methods can also be specified. For example, to sketch with a subsampled random Fourier transform, set\r\n```\r\nopts = LowRankApprox.LRAOptions(sketch=:srft)\r\n```\r\nSketching is a core component of this package and is critical for performance. To disable sketching, use\r\n```\r\nopts = LowRankApprox.LRAOptions(sketch=:none)\r\n```\r\n\r\n## Status\r\n\r\nCurrently implemented algorithms include:\r\n- sketch methods:\r\n - random Gaussian\r\n - random subset\r\n - subsampled random Fourier transform\r\n - sparse random Gaussian\r\n- partial range finder\r\n- partial factorizations:\r\n - QR decomposition\r\n - interpolative decomposition\r\n - singular value decomposition\r\n - eigendecomposition\r\n\r\nStill to come (hopefully):\r\n- CUR decomposition","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}